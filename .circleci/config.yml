# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1.7.0

# workflows:
#   build:
#     jobs:
#       - cypress/run:
#           post-steps:
#             - run: 
#                 when: always
#                 name: Merge MochaAwesome Reports
#                 command: npx mochawesome-merge --reportDir cypress/reports/mocha > mochareports/report.json 
#             - run: 
#                 when: always
#                 name: Create mochawesome html report
#                 command: npx marge mochareports/*.json -f report -o mochareports
#             - store_artifacts:
#                 path: mochareports
#             - store_test_results:
#                 path: cypress/reports/tests
          
#   nightly:
#     triggers: #use the triggers key to indicate a scheduled build
#       - schedule:
#           cron: "0 0 * * *" # use cron syntax to set the schedule
#           filters:
#             branches:
#               only:
#                 - add-cypress
#     jobs:
#       - cypress/run:
#           post-steps:
#             - run: 
#                 when: always
#                 name: Merge MochaAwesome Reports
#                 command: npx mochawesome-merge --reportDir cypress/reports/mocha > mochareports/report.json 
#             - run: 
#                 when: always
#                 name: Create mochawesome html report
#                 command: npx marge mochareports/*.json -f report -o mochareports
#             - store_artifacts:
#                 path: mochareports
#             - store_test_results:
#                 path: cypress/reports/tests




# version: 2

# jobs:
#   build:
#     docker:
#       # the Docker image with Cypress dependencies
#       - image: cypress/base:8
#         environment:
#           ## this enables colors in the output
#           TERM: xterm
#     working_directory: ~/app
#     parallelism: 1
#     steps:
#       - checkout
#       - run:
#           name: Running E2E tests
#           command: npx cypress run
# #       - store_artifacts:
# #           path: cypress/videos
# #       - store_artifacts:
# #           path: cypress/screenshots
# #       - store_artifacts:
# #           path: mochareports
# #       - store_test_results:
# #           path: cypress/results
# #     steps:
# #       - checkout
# #       - restore_cache:
# #           keys:
# #             - v2-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
# #             - v2-deps-{{ .Branch }}-
# #             - v2-deps-
# #       - run: npm ci
# #       - save_cache:
# #           key: v2-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
# #           paths:
# #          
#    - ~/.npm
# #             - ~/.cache
# #       - run:
# #           name: Running E2E tests with JUnit reporter
# #           command: npm run test-junit
# #       - store_test_results:
# #           path: junit-results
# #       - run:
# #           name: Running E2E tests with multiple reporters
# #           command: npm run test-multiple
# #       - store_test_results:
# #           path: multiple-results
# #       - store_artifacts:
# #           path: cypress/videos
# #       - store_artifacts:
# #           path: cypress/screenshots


# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1
# executors:
#   with-chrome:
#     resource_class: small
#     docker:
#       - image: "cypress/browsers:node14.16.0-chrome90-ff88"
# workflows:
#   build:
#     jobs:
# #       - cypress/install
#       - cypress/install:
#             install-command: yarn install --frozen-lockfile
#       - cypress/run:
#           name: Chrome
#           yarn: true
#           requires:
#             - cypress/install
#           executor: with-chrome
#           browser: chrome
#           record: true
#           post-steps:
#             - run: ls
#             - store_test_results:
#                 path: cypress/reports/tests
#             - store_artifacts:
#                 path: cypress/screenshots


# # # Almost work fine
# version: 2

# jobs:
#   build:
#     docker:
#       # the Docker image with Cypress dependencies
#       - image: cypress/base:8
#         environment:
#           ## this enables colors in the output 
#           TERM: xterm
#     working_directory: ~/app
# #     working_directory: ~/InterviewFrontendTest
#     parallelism: 1
#     steps:
#       - checkout
#       - run:
#           name: Running E2E tests
#           command: npx cypress run




# version: 2
# jobs:
#   build:
#     docker:
#       - image: cypress/base:12
#     working_directory: ~/InterviewFrontendTest
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - dependencies-{{ checksum "package.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - dependencies-
#       - run:
#           name: Install dependencies
#           # https://docs.npmjs.com/cli/ci
#           command: npm ci
#       - save_cache:
#           paths:
#             - ~/.npm
#             - ~/.cache
#           key: dependencies-{{ checksum "package.json" }}
#       # continued: start the app and run the tests
#          # two commands: start server, run tests
#       - run:
#           name: Start TodoMVC server
#           command: npm start
#           working_directory: todomvc
#           background: true
#       - run:
#           name: Run Cypress tests
#           command: npx cypress run



# version: 2.1
# orbs:
#   # "cypress-io/cypress@1" installs the latest published
#   # version "1.x.y" of the orb. We recommend you then use
#   # the strict explicit version "cypress-io/cypress@1.x.y"
#   # to lock the version and prevent unexpected CI changes
#   cypress: cypress-io/cypress@1
# workflows:
#   build:
#     jobs:
#       - cypress/run # "run" job comes from "cypress" orb


# # Does not work
# version: 2
# jobs:
#   test:
# #   build:
#     docker:
#       - image: cypress/base:14.16.0
#     steps:
#       - checkout
#       # restore folders with npm dependencies and cypress binary
#       - restore_cache:
#           keys:
#             - cache-{{ checksum "package.json" }}
#       # install npm dependencies & cypress binary
#       # if they were cached, this step is super quick
#       - run:
#           name: Install Dependencies
#           command: npm ci
#       - run: npm run cy:verify
#       # save npm dependencies & cypress binary for future runs
#       - save_cache:
#           key: cache-{{ checksum "package.json" }}
#           # cache NPM modules and the folder with the Cypress binary
#           paths:
#             - ~/.npm
#             - ~/.cache
#       # start server before starting tests
#       - run:
#           command: npm start
#           background: true
#       - run: npm run e2e:record
      
# workflows:
#   version: 2
#   build:
#     jobs:
#       - test





# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1.7.0

# workflows:
#   build:
#     jobs:
#       - cypress/run



# version: 2.1
# orbs:
#   circleci-cli: circleci/circleci-cli@0.1.9
# jobs:
#   build:
#     docker:
#       - image: cimg/node:16.14.2

#     working_directory: ~/repo

#     steps:
#       - checkout

#       # Download and cache dependencies
#       - restore_cache:
#           keys:
#             - v1-dependencies-{{ checksum "package.json" }}
#             # fallback to using the latest cache if no exact match is found
#             - v1-dependencies-

#       - run: npm ci

#       - save_cache:
#           paths:
#             - node_modules
#           key: v1-dependencies-{{ checksum "package.json" }}

#       # we need to install CircleCI CLI tool
#       # to run the "manual" tests
#       - circleci-cli/install
#       - run: npm test
#       - run: npm run manual:tests
#       - run: npm run docs

# workflows:
#   orb_tests:
#     jobs:
#       - build







# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@2.2.0
  
# workflows:
#     example-workflow:
#       jobs:
#         - cypress/run



# # # Almost work fine
# version: 2

# jobs:
#   build:
#     docker:
#       # the Docker image with Cypress dependencies
#       - image: cypress/base:8
#         environment:
#           ## this enables colors in the output 
#           TERM: xterm
# #     working_directory: ~/app
#     working_directory: ~/project/InterviewFrontendTest
#     parallelism: 1
#     steps:
#       - checkout
#       - run:
#           name: Running E2E tests
#           command: npx cypress run


# # # Almost work fine
# version: 2

# jobs:
#   build:
#     docker:
#       # the Docker image with Cypress dependencies
#       - image: cypress/base:8
#         environment:
#           ## this enables colors in the output 
#           TERM: xterm
# #     working_directory: ~/app
#     working_directory: /InterviewFrontendTest
#     parallelism: 1
#     steps:
#       - checkout
#       # Install the latest npm - the node Orb takes care of it
# #       - node/install-npm
# #       - node/install-packages:
# #           app-dir: ~/project/InterviewFrontendTest
# #           cache-version: v1
# #           cache-path: node_modules
#       - run:
#           name: Running E2E tests
#           app-dir: /InterviewFrontendTest
#           cache-version: v1
#           command: npx cypress run
# #           command: npm run build


# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@2.2.0
  
# workflows:
#     example-workflow:
#       jobs:
#         - cypress/install:
#             install-command: npm install
# #         - cypress/install:
# #             install-command: yarn install --frozen-lockfile 
#         - cypress/run:
#             requires:
#               - cypress/install
#             record: true
#             parallel: true
#             parallelism: 1




version: 2.1
orbs:
  cypress: cypress-io/cypress@1.0.0
workflows:
  example-workflow:
    jobs:
      - cypress/install:
           install-command: npm install
      - cypress/run:
            requires:
              - cypress/install
           record: true
           parallel: true
           parallelism: 2
